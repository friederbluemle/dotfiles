#!/bin/bash
kernel=$(uname)
machine=${MACHINE:-$(uname -m)}
if [ "$machine" == "x86_64" ]; then
  machine="x64"
fi
suffix="$(echo "$kernel" | tr '[:upper:]' '[:lower:]')-$machine"
directory=$HOME/.node-versions

# create directory
prepare() {
  mkdir -p "$directory"
  mkdir -p "$HOME/.local/bin"
}

# install specified version
install() {
  prepare
  version=$1
  package="node-v$version-$suffix.tar.xz"
  if [ -f "$directory/$package" ]; then
    echo "Already installed: $version"
    return
  fi
  url="https://nodejs.org/download/release/v$version/$package"
  curl -o "$directory/$(basename "$url")" "$url"
  tar -xf "$directory/$package" -C "$directory"
}

# switch active version
switch() {
  version=$1
  dir="$directory/node-v$version-$suffix"
  if [ ! -d "$dir" ]; then
    echo "Not found: $dir"
    echo "Available:"
    ls -1d "$directory"/*/
    exit 1
  fi
  [ -e "$dir/bin/corepack" ] && ln -sf "$dir/bin/corepack" "$HOME/.local/bin/corepack" || rm -f "$HOME/.local/bin/corepack"
  ln -sf "$dir/bin/node" "$HOME/.local/bin/node"
  ln -sf "$dir/bin/npm" "$HOME/.local/bin/npm"
  ln -sf "$dir/bin/npx" "$HOME/.local/bin/npx"
}

# clear version override
clear() {
  rm -f "$HOME/.local/bin/corepack"
  rm -f "$HOME/.local/bin/node"
  rm -f "$HOME/.local/bin/npm"
  rm -f "$HOME/.local/bin/npx"
}

case "$1" in
  prepare)
    prepare
    ;;
  install)
    install "$2"
    ;;
  switch)
    switch "$2"
    ;;
  clear)
    clear
    ;;
esac
